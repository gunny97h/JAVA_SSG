파일 다루기
-------------
1. 파일을 다루는 클래스를 크게 2가지로 나누어 각각을 비교 설명
    ● 바이트 스트림 (Byte Stream):
     - 파일을 바이트 단위로 읽고 쓰는 클래스.
     - 주요 클래스: FileInputStream, FileOutputStream.
     - 모든 종류의 파일(텍스트, 이미지, 비디오 등)을 처리할 수 있음.
     - 주로 입출력에 특화된 파일(이미지, 비디오, 바이너리 파일 등) 처리에 사용.

    ● 문자 스트림 (Character Stream):
     - 파일을 문자 단위로 읽고 쓰는 클래스.
     - 주요 클래스: FileReader, FileWriter.
     - 텍스트 기반 파일(UTF-8, Unicode 등) 처리에 적합.
     - 문자 기반 데이터만 처리하므로 바이트 데이터를 다룰 때는 적합하지 않음.

2. 바이트 스트림과 문자 스트림의 차이
    ● 바이트 스트림:
     - 1 바이트 단위로 데이터를 처리.
     - 모든 종류의 파일을 다룰 수 있음.
     + 이름에 Stream

    ● 문자 스트림:
     - 2 바이트 유니코드 문자 단위로 데이터를 처리.
     - 텍스트 파일과 같은 문자 데이터를 다루는 데 적합.
     + 이름에 Reader, Writer

3. Reader, Writer가 붙어있는 클래스 이름은 바이트 스트림인가? 문자 스트림인가?
    ● Reader, Writer가 붙어있는 클래스는 문자 스트림이다.

4. 스트림은 무엇?
     + Connection, Stream
    ● 스트림(Stream)은 데이터의 흐름을 의미하며,
     - 프로그램에서 데이터를 읽고 쓰기 위해 일련의 바이트나 문자를 순차적으로 전송하는 방법이다.
     - 스트림은 데이터를 연속적으로 처리하기 때문에 입력이나 출력 작업을 효율적으로 수행할 수 있다.

5. 바이트 스트림으로 읽을 때 한 번에 하나씩 읽는 것이 아니라
   여러개를 읽어서 저장공간에 넣고 싶을 때 사용하는 것은?
    ● 배열(예: byte[] buffer)을 사용하여 여러 바이트를 한 번에 읽어 저장할 수 있다.
      read(byte[] b) 메서드를 사용하여 버퍼 크기만큼 데이터를 읽어올 수 있다.

6. 바이트스트림으로 도착한 입력데이터를 문자스트림으로 읽어오고 싶을 때
   사용하는 브릿지역할의 클래스는?
    ● InputStreamReader: 바이트 스트림을 문자 스트림으로 변환하는 역할을 한다.

7. Buffer를 사용하면 좋은 점은? 2가지
    ● 성능 향상: 데이터를 한 번에 여러 개 묶음으로 읽고 쓰기 때문에 입출력 속도를 크게 개선할 수 있다.
    ● 시스템 자원 절약: 입출력 작업의 빈도를 줄여 시스템 호출을 최소화하므로 자원을 절약할 수 있다.
    + 데이터를 라인별로 스트링으로 읽어올 수 있다.(내가 원하는 방식으로 데이터를 가져올 수 있다.)

8. 스트림을 다룰 때 꼭 해주어야하는 것은?
    ● 스트림을 닫아주어야 한다. close() 메서드를 호출하여 시스템 자원을 해제하고,
      메모리 누수를 방지해야 한다. 이를 위해 try-with-resources 구문을 사용하는 것이 좋다.
    + 예외처리

9. 문자 스트림을 사용할 때, 버퍼에 있는 데이터를 한 줄 씩 읽어왔을 때 리턴 타입은?
    ● String 타입이다. BufferedReader의 readLine() 메서드는 한 줄씩 읽어서 문자열로 반환한다.

10. 버퍼에 있는 데이터를 한 줄 씩 읽어왔을 때 더이상 없으면 반환되는 것은?
    ● null이 반환된다. readLine() 메서드는 더 이상 읽을 데이터가 없을 경우 null을 반환한다.
    + 문자가 아닐 때 null 대신 -1이 반환

========================================================================================
+스트림의 특징

● FIFO 구조
먼저 들어간 데이터가 먼저 나오는 형태로 데이터의 순서가 바뀌지 않는다

● 단방향
하나의 스트림에서 입출력이 동시에 이루어 지지 않는다
입력과 출력에 각각 스트림을 열어 사용해야 한다

● 지연 가능
-> 단점
스트림 내의 데이터가 모두 전송되기 전까지 프로그램이 지연 상태에 빠질 수 있다.