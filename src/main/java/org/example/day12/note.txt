
● 프로그래밍을 하기 위한 상식

1. 데이터를 메모리에 로딩(변수 사용)
2. cpu 처리(연산자, 기호)
3. 제어문(순차문, 반복문, 조건문)
    - 순차문 : 입력(데이터) --> 처리 --> 출력(화면, 파일, db, ...)
4. 배열
--------------------------모든 언어의 공통
5. 객체지향언어(클래스 --> 부품)
    - main
6. 클래스(필드 + 메서드)
    ○ 클래스 메서드
    - 자주 이 기능을 쓰면 메모리에 메서드를 미리 올려놓고
      아무때나 클래스 이름으로 접근해서 사용 (Car.start() --> static 메서드)
    - 객체를 생성하여 생성된 부품의 기능을 사용 (Car c1 = new Car(); c1.run())
      --> 일반 메서드
    ○ 클래스 필드
    - 메모리에 미리 올라가져 있는 변수 --> static 변수, 클래스 변수
    - 객체 생성 후 생성되고 접근할 수 있는 변수 --> 인스턴스 변수
      --> 생성자 (메서드) : 객체 생성시 인스턴스 변수 초기화를 하는 메서드를 정의할 수 있음.


------------------------------------------------------
● debugger
단축키
 - resume : f8
 - step over : f9
    ...